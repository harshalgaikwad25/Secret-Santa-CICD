
pipeline {
    agent any

    tools {
        jdk "jdk17"
        maven "maven3"
    }

    environment {
        SCANNER_HOME = tool "sonar-scanner"  // Uses the SonarQube tool installed via Jenkins
    }

    stages {
        stage('Git Checkout') {
            steps {
                git changelog: false, poll: false, url: 'https://github.com/kadamvignesh/Secret-Santa-CICD.git'
            }
        }

        stage('Code Compile') {
            steps {
                sh "mvn clean compile"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=secret-santa \
                    -Dsonar.projectKey=secret-santa \
                    -Dsonar.java.binaries=.'''
                }
            }
        }

        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DP'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Maven Build') {
            steps {
                sh "mvn clean install"
            }
        }

        stage("Docker Build and Push") {
            steps {
                withDockerRegistry(credentialsId: 'docker', url: 'https://index.docker.io/v1/') {
                    script {
                        
                        sh "docker build -t santa:latest ."
                        
                        sh "docker tag santa:latest kadamvignesh/santa:latest"
                    
                        sh "docker push kadamvignesh/santa:latest"
                    }
                }
            }
        }
        
        
        stage("Docker deploy to container") {
            steps {
                
                sh "docker run -d -p 8080:8080 santa:latest"
            }
        }
    }
}
